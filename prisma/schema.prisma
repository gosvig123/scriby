generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @unique @default(autoincrement())
  email         String       @unique
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt()
  authMethods   AuthMethod[]
  authlink      AuthLink?
  sessionId     String?
  credits       Float @default(0)
  transcriptions Transcription[]

}

model AuthMethod {
  id        Int      @id @unique @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  type      AuthType @map(name: "auth_type")
  password  String?
  uniqueId  String?
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

enum AuthType {
  GOOGLE
  EMAIL
  OTHER
}

model AuthLink {
  id         String    @id @unique  @default(uuid())
  userId     Int?      @unique
  user       User?     @relation(fields: [userId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt()
}

model Transcription {
  id          String    @id @default(uuid())
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  userId      Int       
  user        User      @relation(fields: [userId], references: [id])
  transcript  String
  confidence  Float     @default(0)  
  words       Json      @default("[]")  
  paragraphs  Json      @default("{}")  
}
